<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>dodbrit Blog</title>
        <link>https://blog.dodbrit.dev/</link>
        <description>dodbrit Blog</description>
        <lastBuildDate>Thu, 13 Oct 2022 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Simple Helm Chart Updates]]></title>
            <link>https://blog.dodbrit.dev/2022-10-13/simple-helm-update</link>
            <guid>2022-10-13/simple-helm-update</guid>
            <pubDate>Thu, 13 Oct 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Thumbnail]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="Thumbnail" src="/assets/images/Thumbnail-1b66b69f3241039b68f1e5b7e04e34a2.png" width="1280" height="720" class="img_ev3q"></p><h1>Simple Helm Chart Updates</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="problem">Problem<a class="hash-link" href="#problem" title="Direct link to heading">​</a></h2><blockquote><p><em>"Helm helps you manage Kubernetes applications — Helm Charts help you define, install, and upgrade even the most complex Kubernetes application. Charts are easy to create, version, share, and publish — so start using Helm and stop the copy-and-paste."</em> -- <a href="https://helm.sh" target="_blank" rel="noopener noreferrer">Helm</a></p></blockquote><p>Helm Charts are a fantastic tool to utilize if you are distributing your complex applications to a wide audience. However, it starts to become a chore to manage as the number of Applications(Charts) and Clusters increase. Without using a Continuous Delivery (CD) tool, such as <a href="https://argoproj.github.io/cd/" target="_blank" rel="noopener noreferrer">ArgoCD</a>, you are left to manage the Charts manually. </p><p>Well that was until I stumbled across this Helm Plugin ...</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="solution">Solution<a class="hash-link" href="#solution" title="Direct link to heading">​</a></h2><p><code>Helm Whatup</code> is a Helm plugin to help users determine if there's an update available for their installed charts. It works by reading your locally cached index files from the chart repositories (via helm repo update) and checking the version against the latest deployed version of your charts in the Kubernetes cluster.</p><blockquote><p><strong>Note</strong>: The original author of <a href="https://github.com/bacongobbler/helm-whatup" target="_blank" rel="noopener noreferrer">Helm Whatup</a> has since stopped development. Thanks to the power of the community, <a href="https://github.com/fabmation-gmbh" target="_blank" rel="noopener noreferrer">fabmation-gmbh</a> has forked the project and continued development.</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="installation">Installation<a class="hash-link" href="#installation" title="Direct link to heading">​</a></h3><p>Perform the following steps to install <code>Helm Whatup</code></p><ol><li>Set the <code>HELM_HOME</code> Environment Variable to the Helm Directory (MacOS)</li></ol><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">HELM_HOME</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/Users/</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">username</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">/Library/helm</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="2"><li>Install the Helm Plugin</li></ol><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">helm plugin </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> https://github.com/fabmation-gmbh/helm-whatup</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="usage">Usage<a class="hash-link" href="#usage" title="Direct link to heading">​</a></h3><p>To use this plugin, simply update the local chart repositories (ensures current versions are found) and perform the scan. </p><ol><li>Update Chart Repositories</li></ol><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">helm repo update</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="2"><li>Check for updatable Charts ...</li></ol><p><strong>In Current Namespace</strong></p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">helm whatup</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>In All Namespaces</strong></p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">helm whatup -A</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="additional-help">Additional Help<a class="hash-link" href="#additional-help" title="Direct link to heading">​</a></h3><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">This Command lists all releases </span><span class="token function" style="color:#d73a49">which</span><span class="token plain"> are outdated.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">By default, the output is printed </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> a Table but you can change this behavior</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">with the </span><span class="token string" style="color:#e3116c">'--output'</span><span class="token plain"> Flag.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">You can </span><span class="token builtin class-name">enable</span><span class="token plain"> all BETA features by executing:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">HELM_WHATUP_BETA_FEATURES</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Usage:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  whatup </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">flags</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Aliases:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  whatup, od</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Flags:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -a, --all                   show all releases, not just the ones marked deployed or failed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -A, --all-namespaces        list releases across all namespaces</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --color                 </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">BETA</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> colorize/highlight the repositories from where the chart has been installed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -d, --date                  </span><span class="token function" style="color:#d73a49">sort</span><span class="token plain"> by release </span><span class="token function" style="color:#d73a49">date</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --deployed              show deployed releases. If no other is specified, this will be automatically enabled</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --devel                 use development versions </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">alpha, beta, and release candidate releases</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">, too. Equivalent to version </span><span class="token string" style="color:#e3116c">'&gt;0.0.0-0'</span><span class="token builtin class-name">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --failed                show failed releases</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -h, --help                  </span><span class="token builtin class-name">help</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> whatup</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --ignore-deprecation    ignore/skip charts </span><span class="token function" style="color:#d73a49">which</span><span class="token plain"> are marked as </span><span class="token string" style="color:#e3116c">"DEPRECATED"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">default </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --ignore-repo           ignore error </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> no repo </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> a chart is found </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">default </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -m, --max int               maximum number of releases to fetch </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">default </span><span class="token number" style="color:#36acaa">256</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --offset int            next release name </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> the list, used to offset from start value</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --only-source-updates   only show updates of a chart repository where the Chart-Version and App-Version </span><span class="token keyword" style="color:#00009f">do</span><span class="token plain"> match. </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">default </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -o, --output </span><span class="token function" style="color:#d73a49">format</span><span class="token plain">         prints the output </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> the specified format. Allowed values: table, json, yaml </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">default table</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --pending               show pending releases</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -r, --reverse               reverse the </span><span class="token function" style="color:#d73a49">sort</span><span class="token plain"> order</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -q, --short                 output short </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">quiet</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> listing </span><span class="token function" style="color:#d73a49">format</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --superseded            show superseded releases</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --uninstalled           show uninstalled releases</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --uninstalling          show releases that are currently being uninstalled</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --version               show version information</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>Kubernetes</category>
            <category>Helm</category>
        </item>
        <item>
            <title><![CDATA[Terminating Namespaces]]></title>
            <link>https://blog.dodbrit.dev/2021-10-29/terminating-namespaces</link>
            <guid>2021-10-29/terminating-namespaces</guid>
            <pubDate>Fri, 29 Oct 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Terminating Namespaces Hero]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="Terminating Namespaces Hero" src="/assets/images/TerminatingNamespaces-f34725b716e0ebd84db04d2f4563ce37.png" width="1400" height="933" class="img_ev3q"></p><p>After you start playing around with <em>Kubernetes</em>, or even <em>Red Hat OpenShif</em>t, you are potentially going to run into an issue that I’ve had to encounter many times. Sometimes it happens quickly, other times it takes longer, but eventually you will run into the issue of a namespace trying to terminate but appear to be stuck.</p><p>The TLDR of this issue, is that the <strong>Kubernetes Finalizer</strong> of the namespace fails to complete successfully leaving you with a namespace that is “terminating”.</p><div class="theme-admonition theme-admonition-caution alert alert--warning admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</div><div class="admonitionContent_S0QG"><p>After performing extensive research on this topic, modifying the <strong>Kubernetes Finalizer</strong> may cause unexpected results. There have been instances where the <em>namespace</em> was removed via the <strong>Kubernetes Finalizer</strong> and when creating a namespace of the same name, artifacts from the previous namespace remained (i.e. Pods ). </p><p>It is important to ensure that all artifacts (Pods, Services, etc.) have been removed prior to running this command.
</p></div></div><p>From what I have gathered (so far), the <strong>Kubernetes Finalizer</strong> is essentially the steps that need to be taken prior to a delete action. In this situation, it appears that the Kubernetes Finalizer is ensuring that all of the resources within a namespace have been deleted.</p><p>In a perfect world, you should track down why the Kubernetes Finalizer failed in the first place and resolve that issue. However, the world isn’t always perfect, and you don’t always have the time. </p><p>The following command is a quick, and dirty, way to remove that terminating namespace. In most situations, it will work as expected, but there is a chance that some strange things could happen. I personally have had resources recreated after terminating a namespace and creating a new namespace with the same name as the previous namespace.</p><p><strong>Before running this command, be sure to replace “broken-app” with the namespace that you are trying to remove.</strong></p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv codeBlockLinesWithNumbering_o6Pm"><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">ns</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">broken-app</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> kubectl get ns </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">${ns}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> -o json </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sed</span><span class="token plain"> s/</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">"kubernetes</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">"//g </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> kubectl replace --raw /api/v1/namespaces/</span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">${ns}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain">/finalize -f -</span></span></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>Kubernetes</category>
            <category>Troubleshooting</category>
        </item>
        <item>
            <title><![CDATA[K3S Cluster with vSphere Storage (Part I)]]></title>
            <link>https://blog.dodbrit.dev/2021-07-03/k3s-cluster-with-vsphere-storage-part-i</link>
            <guid>2021-07-03/k3s-cluster-with-vsphere-storage-part-i</guid>
            <pubDate>Fri, 30 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[K3S Cluster with vSphere Storage Hero]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt=" K3S Cluster with vSphere Storage Hero" src="/assets/images/k3s_vsphere_part1-0a59f734398d761defcce7d96ad62309.png" width="1400" height="933" class="img_ev3q">
Whether you work in an environment that utilizes VMware products, you have a VMware Homelab or you just want to learn something different for Kubernetes Storage this post is for you.</p><p>When deploying a highly available Kubernetes cluster, distributed storage becomes a thorn in your side. Just like every other Cloud Native tool, there are a number of solutions out there; Rancher Lab’s Longhorn and GlusterFS just to name two. However, did you know, starting with vSphere 6.7u3 and newer, you can utilize your existing vSphere Datastore as persistent storage for your Kubernetes clusters?</p><p>Being a huge fan of Rancher Labs, and K3S, this blog will describe how to deploy a K3S cluster on vSphere and utilize vSphere Datastores as persistent storage.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-write-this-blog">Why write this blog?<a class="hash-link" href="#why-write-this-blog" title="Direct link to heading">​</a></h2><p>I’ll begin with openly admitting that i’m no William Shakespeare. I’m not the best at writing and i’m even worse at spelling (thank you spell check) but I have a way with simplifying a tough technical subject so that I can, and even management can, understand the task.</p><p>So, I decided to write this blog post for two main reason; firstly, and most selfishly, I wrote it for me. I guarantee there is going to be a time in my future where I’m going to need to understand how I accomplished this task. While writing documentation is a pain, it does provide very useful from time to time and as an added bonus, by writing down the steps and researching the technology behind it, I gained additional knowledge and have a better chance at remembering it too. If it just so happens that the post helps you too, well then thats another great bonus.</p><p>The second reason I wrote this blog is because I really didn’t find much out there talking about the same topic. Anytime I’ve research Kubernetes Storage, it resulted in deploy X or install Y. In the same fashion, anytime you research anything Kubernetes related it will involve something cloud related i.e. use AWS S3 buckets. While I’ll believe AWS has a time and a place, I like to do things on-prem and in Homelabs too.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-does-this-all-work">How does this all work?<a class="hash-link" href="#how-does-this-all-work" title="Direct link to heading">​</a></h2><p>Before we get into the fun stuff, I thought I would explain what is going to happen and how it allows us to utilize vSphere resources. Feel free to skip this if you want as this is more of an FYI if you ever need to deploy this in a secured production environment and have to explain yourself.</p><p>Traditionally Kubernetes (K8s) deploys with “In-Tree” cloud providers. The simplest way i’ve understood this is; providers are essentially drivers within Kubernetes that allow communication with cloud resources; for example AWS ELBs. They can essentially translate Kubernetes commands into the appropriate cloud API calls. Using the AWS ELB example, it could, in theory, update the ELB to include a new host IP.</p><p>With K3S, Rancher Labs manages to minimize the binary by removing these providers and including a lightweight “local” cloud provider. K3S can be deployed in small environments, on IOT devices, on the Edge and even in space. In these situations, Cloud providers aren’t needed. Just imagine the bill trying to reach AWS services from space. With all that being said, K3S can still be deployed in a production environment and can still utilize other cloud providers.</p><p>When adding additional Cloud Providers to any Kubernetes distribution, it is known as “Out-of-Tree” Cloud Providers. vSphere provides both the Cloud Provider Interface (CPI) and Container Storage Interface (CSI) for install in this method.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_S0QG"><p>Traditionally Kubernetes recommended using In-Tree providers. However, recently there has been a shift to using Out-of-Tree providers by default.</p></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="terminology">Terminology<a class="hash-link" href="#terminology" title="Direct link to heading">​</a></h2><table><thead><tr><th align="center"><strong>Term</strong></th><th><strong>Definition</strong></th></tr></thead><tbody><tr><td align="center">Cloud Provider Interface (CPI)</td><td>The Brains of the Provider. This is what makes the connection between the Kubernetes Cluster and the Cloud Provider</td></tr><tr><td align="center">Container Storage Interface (CSI)</td><td>Using the CPI, this allows Kubernetes Storage Classes the ability to communicate with and utilize cloud tools. For example, vSphere Datastore</td></tr><tr><td align="center">In-Tree Providers</td><td>Providers natively shipped with Kubernetes</td></tr><tr><td align="center">Out-of-Tree Providers</td><td>Providers that are installed into Kubernetes after deployment</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a class="hash-link" href="#summary" title="Direct link to heading">​</a></h2><p>While this blog was filled with dry information, it definitely helps describe what the heck is going on. In the next part of this blog, I will demonstrate the deployment of a K3S cluster in a vSphere environment.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="references">References<a class="hash-link" href="#references" title="Direct link to heading">​</a></h2><ul><li><a href="https://longhorn.io/" target="_blank" rel="noopener noreferrer">Rancher Labs Longhorn</a></li><li><a href="https://cloud-provider-vsphere.sigs.k8s.io/" target="_blank" rel="noopener noreferrer">vSphere Cloud Provider</a></li><li><a href="https://rancher.com/docs/k3s/latest/en/" target="_blank" rel="noopener noreferrer">Rancher Labs K3S</a></li><li><a href="https://kubernetes.io/docs/concepts/architecture/cloud-controller/" target="_blank" rel="noopener noreferrer">Kuberenetes Cloud Controllers</a></li></ul>]]></content:encoded>
            <category>Rancher</category>
            <category>Kubernetes</category>
            <category>Storage</category>
            <category>K3S</category>
            <category>VMWare</category>
        </item>
        <item>
            <title><![CDATA[K3S Cluster with vSphere Storage (Part II)]]></title>
            <link>https://blog.dodbrit.dev/2021-07-03/k3s-cluster-with-vsphere-storage-part-ii</link>
            <guid>2021-07-03/k3s-cluster-with-vsphere-storage-part-ii</guid>
            <pubDate>Fri, 30 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[K3S Cluster with vSphere Storage Hero]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt=" K3S Cluster with vSphere Storage Hero" src="/assets/images/k3s_vsphere_part2-68e6892f6173ca017ae23698de09967e.png" width="1400" height="933" class="img_ev3q"></p><p>Continuing on the discussion from <a href="/2021-07-03/k3s-cluster-with-vsphere-storage-part-i">Part I</a>, in this part we are going to deploy a K3S cluster on a vSphere environment.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-1-the-setup">Step 1: The Setup<a class="hash-link" href="#step-1-the-setup" title="Direct link to heading">​</a></h2><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_S0QG"><p>I’m currently in the process of creating Terraform scripts to accomplish this deployment, but feel free to deploy you cluster per your favorite method. I will create a blog post describing my Terraform scripts and the headache that PhotonOS caused once I’ve completed the Terraform Script.</p></div></div><p>The first thing we need to do is setup some nodes to deploy our K3S cluster too. Because I like pain, I decided to do this with VMware’s PhotonOS but you can use something much simpler like Ubuntu. </p><p>For this blog, I’m deploying; 3x VMs to act as Server (Master) nodes, 3x VMs to act as Agents (Worker) nodes and 1x VM as a cluster load balancer. At a minimum, each Virtual Machine (VM) needs to have a static IP, be able to communicate to one another and be able to communicate to the vSphere server (IP or FQDN). For complete setup instructions, refer to Rancher’s K3S documentation to find out what requirements your distribution of Linux needs to deploy K3S.</p><p>The hardware requirements for each node is going to be specific to what you wish to deploy within the cluster. Because workloads vary dramatically, it is very difficult to suggest hardware sizes. However, as a starting point, and assuming you have the hardware capacity, I typically start with 2 vCPUs, 4GB of RAM and 16GB HDD (Thin Provisioned) and grow from there.</p><div class="theme-admonition theme-admonition-caution alert alert--warning admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</div><div class="admonitionContent_S0QG"><p>If you are using PhotonOS like I did, you will need to install AppArmor with the following command:</p><p><code>tdnf install -y apparmor-utils</code></p></div></div><p>Once you have deployed your Virtual Machines you should something similar to this. These IP addresses can be whatever suits your network as long as they can communicate to each other.</p><table><thead><tr><th align="center"><strong>Node Name</strong></th><th align="center"><strong>IP Address</strong></th><th align="center"><strong>Description</strong></th></tr></thead><tbody><tr><td align="center">MASTER-001</td><td align="center">10.0.15.201</td><td align="center">Server (Master) Node</td></tr><tr><td align="center">MASTER-002</td><td align="center">10.0.15.202</td><td align="center">Server (Master) Node</td></tr><tr><td align="center">MASTER-003</td><td align="center">10.0.15.203</td><td align="center">Server (Master) Node</td></tr><tr><td align="center">WORKER-001</td><td align="center">10.0.15.204</td><td align="center">Agent (Worker) Node</td></tr><tr><td align="center">WORKER-002</td><td align="center">10.0.15.205</td><td align="center">Agent (Worker) Node</td></tr><tr><td align="center">WORKER-003</td><td align="center">10.0.15.206</td><td align="center">Agent (Worker) Node</td></tr><tr><td align="center">LB-001</td><td align="center">10.0.15.200</td><td align="center">NGINX Load Balancer</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-2-deploying-the-external-load-balancer">Step 2: Deploying the External Load Balancer<a class="hash-link" href="#step-2-deploying-the-external-load-balancer" title="Direct link to heading">​</a></h2><p>To make life a whole lot easier, and to follow good practices, we are going to deploy an external load balancer for the cluster. In a production environment this can be a physical appliance such as an F5, but in this example we are going to deploy NGINX. This Load Balancer is going to be configured to direct all Kubernetes Management traffic to the Server (Master) Nodes, and all the HTTP/HTTPS traffic to the Agent (Worker) Nodes.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_S0QG"><p>In a Homelab, or resource limited, environment, instead of deploying an external loadbalancer, you can deploy <a href="https://metallb.universe.tf" target="_blank" rel="noopener noreferrer">MetalLB</a> within you cluster.</p></div></div><p>In the future, after the cluster and application(s) have been deployed, DNS records will be pointed to the IP address of this Load Balancer. That traffic will be router to the cluster where an Ingress Controller will route the traffic to the appropriate services and pods.</p><p>Deploying the Load Balancer may vary depending upon your distribution of choice, but to keep this simple, all we are going to do is; install Docker on the node and deploy NGINX via Docker Compose. The following steps need to be performed on the Load Balancer node.</p><p>For PhotonOS, Docker is pre-installed. To utilize Docker on PhotonOS, you need to enable and start the Docker service.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">## ENABLE DOCKER SERVICE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">systemctl </span><span class="token builtin class-name">enable</span><span class="token plain"> docker.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## START DOCKER SERVICE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">systemctl start docker.service</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="theme-admonition theme-admonition-caution alert alert--warning admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</div><div class="admonitionContent_S0QG"><p>As of 30 July 2021, PhotonOS 4.0 (build 1526e30ba) ships with an older version of Docker (Docker version 19.03.15, build 99e3ed8). Because of this we will need to install Docker-Compose.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">## INSTALL DOCKER-COMPOSE BINARY</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> -L </span><span class="token string" style="color:#e3116c">"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-</span><span class="token string variable" style="color:#36acaa">$(</span><span class="token string variable function" style="color:#d73a49">uname</span><span class="token string variable" style="color:#36acaa"> -s</span><span class="token string variable" style="color:#36acaa">)</span><span class="token string" style="color:#e3116c">-</span><span class="token string variable" style="color:#36acaa">$(</span><span class="token string variable function" style="color:#d73a49">uname</span><span class="token string variable" style="color:#36acaa"> -m</span><span class="token string variable" style="color:#36acaa">)</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> -o /usr/local/bin/docker-compose</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## MAKE EXECUTABLE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">chmod</span><span class="token plain"> +x /usr/local/bin/docker-compose</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div><p>Now that we have our dependencies taken care of, the last thing we need to do is create some configurations files. The first one is <code>docker-compose.yml</code> and it is simply deploying a NGINX image with the configuration file that we are about to write. Additionally, the configuration specifies that NGINX shall use the local configuration file (<code>nginx.conf</code>) and to expect traffic on ports; 80, 443, 6443.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_S0QG"><p>Do NOT use “latest” tags in production. This is bad practice and can lead to unexpected outages and issues. By default, not specifying a tag, latest will be used. </p></div></div><p>Given this is in a Homelab, we can ignore this best practice.</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">docker-compose.yml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">## DEFINE VERSION</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">version</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"3.7"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## DEFINE SERVICE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">services</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">nginx</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> nginx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">restart</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> always</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">volumes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ./nginx.conf</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">/etc/nginx/nginx.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token datetime number" style="color:#36acaa">80:80</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 443</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">443</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 6443</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">6443</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Before we can start our NGINX image, we have to create the NGINX configuration. The file below is a simple configuration file that routes all HTTP/HTTPS traffic to the Agent (Worker) nodes and all Kubernetes Management traffic the Server (Master) nodes.</p><p>Update the IP addresses to reflect the addresses you have specified in your environment.</p><div class="language-title=&quot;nginx.conf&quot; codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-title=&quot;nginx.conf&quot; codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">worker_processes 4;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">worker_rlimit_nofile 40000;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">events {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    worker_connections 8192;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">stream {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    upstream servers_http {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        least_conn;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        server 10.0.15.204:80 max_fails=3 fail_timeout=5s;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        server 10.0.15.205:80 max_fails=3 fail_timeout=5s;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        server 10.0.15.206:80 max_fails=3 fail_timeout=5s;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    server {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        listen 80;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        proxy_pass servers_http;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    upstream servers_https {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        least_conn;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        server 10.0.15.204:443 max_fails=3 fail_timeout=5s;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        server 10.0.15.205:443 max_fails=3 fail_timeout=5s;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        server 10.0.15.206:443 max_fails=3 fail_timeout=5s;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    server {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        listen     443;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        proxy_pass servers_https;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    upstream api_server {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      server 10.0.15.201:6443;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      server 10.0.15.202:6443;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      server 10.0.15.203:6443;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    server {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      listen 6443;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      proxy_pass api_server;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      proxy_timeout 30;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      proxy_connect_timeout 2s;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now we have both of our configuration files, the last thing to do is start the NGINX instance. To do this we run <code>docker-compose up -d</code>. This will start the NGINX instance in a detached state.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-3-deploying-the-cluster">Step 3: Deploying the Cluster<a class="hash-link" href="#step-3-deploying-the-cluster" title="Direct link to heading">​</a></h2><p>Now that we have our external Load Balancer in place, we can turn our attentions to the cluster.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="configure-primary-server-master-node">Configure Primary Server (Master) Node<a class="hash-link" href="#configure-primary-server-master-node" title="Direct link to heading">​</a></h3><p>The first step in creating a cluster is deploying our primary Server (Master) node and initiating the Kubernetes cluster.</p><ol><li>SSH into the primary Server (Master) Node</li><li>Create a <code>k3s-config.yaml</code> file</li></ol><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">k3s-config.yaml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">cluster-init</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">disable-cloud-controller</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">write-kubeconfig-mode</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"0644"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">tls-san</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"10.0.15.200"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">disable</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> traefik</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kubelet-arg</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"cloud-provider=external"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="3"><li>Install the Primary Master Node</li></ol><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> -sfL https://get.k3s.io </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sh</span><span class="token plain"> -s - server --disable-cloud-controller --config /root/k3s-config.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="4"><li>Obtain the Cluster token for use in future steps</li></ol><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> /var/lib/rancher/k3s/server/node-token</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="configure-additional-server-master-nodes">Configure additional Server (Master) Nodes<a class="hash-link" href="#configure-additional-server-master-nodes" title="Direct link to heading">​</a></h3><p>For each of the remaining Server (Master) Nodes, follow the following steps;</p><ol><li>SSH into the Node</li><li>Save the Server Token as an environment variable.</li></ol><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">K3S_TOKEN</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'{{ CLUSTER_TOKEN }}'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="3"><li>Install K3S as a Server</li></ol><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> -sfL https://get.k3s.io </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">INSTALL_K3S_EXEC</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"--no-deploy traefik"</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sh</span><span class="token plain"> -s - server --disable-cloud-controller --server https://10.0.15.200:6443 --token </span><span class="token variable" style="color:#36acaa">$K3S_TOKEN</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="configure-agents-worker-nodes">Configure Agents (Worker) Nodes<a class="hash-link" href="#configure-agents-worker-nodes" title="Direct link to heading">​</a></h3><p>Finally, lets add the Agent (Worker) Nodes to the cluster.</p><ol><li>SSH into the Node</li><li>Save the Cluster Token as an environment variable</li></ol><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">K3S_TOKEN</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'&lt;&lt;CLUSTER_TOKEN&gt;&gt;'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="3"><li>Install K3S as a Agent</li></ol><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> -sfL https://get.k3s.io </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sh</span><span class="token plain"> -s - agent --server https://10.0.15.200:6443 --token </span><span class="token variable" style="color:#36acaa">$K3S_TOKEN</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-4-configure-local-workstation">Step 4: Configure Local Workstation<a class="hash-link" href="#step-4-configure-local-workstation" title="Direct link to heading">​</a></h2><p>To make management easier, we can configure your local workstation to manage the cluster. This removes the need to SSH into different machines.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="prerequisites">Prerequisites<a class="hash-link" href="#prerequisites" title="Direct link to heading">​</a></h3><p>To enable your local workstation the ability to manage the cluster, please ensure the workstation has <code>kubectl</code> installed. On a Mac, you can use <code>brew install kubectl</code>. For other operating systems you can follow the Kubernetes documentation; For <a href="https://kubernetes.io/docs/tasks/tools/install-kubectl-windows/" target="_blank" rel="noopener noreferrer">Windows</a>, and for <a href="https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/" target="_blank" rel="noopener noreferrer">Linux</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="configuration-steps">Configuration Steps<a class="hash-link" href="#configuration-steps" title="Direct link to heading">​</a></h3><ol><li>Copy kubeconfig file from Primary Server (Master) Node onto your local workstation (Replace the IP address with the IP of your primary Server (Master) Node.)</li></ol><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">scp</span><span class="token plain"> root@10.0.15.201:/etc/rancher/k3s/k3s.yaml k3s.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="2"><li>By default, the generated <code>KUBECONFIG</code> file (<code>k3s.yaml</code>) is populated with <code>127.0.0.1:6443</code> as the server address. You will need to update this file to reflect your external load balancer IP Address.</li><li>Finally, configure your Terminal to utilize the new kubeconfig. </li></ol><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">KUBECONFIG</span><span class="token operator" style="color:#393A34">=~</span><span class="token plain">/k3s.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a class="hash-link" href="#summary" title="Direct link to heading">​</a></h2><p>Having followed this blog post, you should now have the framework of the cluster up and running. Before we can start deploying workloads there are a few more steps that we need accomplish.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="references">References<a class="hash-link" href="#references" title="Direct link to heading">​</a></h2><ul><li><a href="https://longhorn.io/" target="_blank" rel="noopener noreferrer">Rancher Labs Longhorn</a></li><li><a href="https://cloud-provider-vsphere.sigs.k8s.io/" target="_blank" rel="noopener noreferrer">vSphere Cloud Provider</a></li><li><a href="https://rancher.com/docs/k3s/latest/en/" target="_blank" rel="noopener noreferrer">Rancher Labs K3S</a></li><li><a href="https://kubernetes.io/docs/concepts/architecture/cloud-controller/" target="_blank" rel="noopener noreferrer">Kuberenetes Cloud Controllers</a></li><li><a href="https://vmware.github.io/photon/docs/" target="_blank" rel="noopener noreferrer">VMware Photon OS</a></li><li><a href="http://nginx.org/en/docs/http/load_balancing.html" target="_blank" rel="noopener noreferrer">NGINX Load Balancer</a></li></ul>]]></content:encoded>
            <category>Rancher</category>
            <category>Kubernetes</category>
            <category>Storage</category>
            <category>K3S</category>
            <category>VMWare</category>
        </item>
        <item>
            <title><![CDATA[K3S Cluster with vSphere Storage (Part III)]]></title>
            <link>https://blog.dodbrit.dev/2021-07-03/k3s-cluster-with-vsphere-storage-part-iii</link>
            <guid>2021-07-03/k3s-cluster-with-vsphere-storage-part-iii</guid>
            <pubDate>Fri, 30 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[K3S Cluster with vSphere Storage Hero]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt=" K3S Cluster with vSphere Storage Hero" src="/assets/images/k3s_vsphere_part3-603a59da1b815db7f979bf59aed9111a.png" width="1400" height="933" class="img_ev3q"></p><p>Having followed the steps in Part II, you should have a K3S Cluster stood up. In this Part we are going to add the all important Cloud Provider.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-1-prepare-nodes-for-vsphere-cloud-provider">Step 1: Prepare Nodes for vSphere Cloud Provider<a class="hash-link" href="#step-1-prepare-nodes-for-vsphere-cloud-provider" title="Direct link to heading">​</a></h2><p>Before we can install the vSphere Cloud provider, there are couple configurations that need to be applied. You can read more about these requirements by heading over to the <a href="https://cloud-provider-vsphere.sigs.k8s.io/" target="_blank" rel="noopener noreferrer">VMWare documentation</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="taint-nodes">Taint Nodes<a class="hash-link" href="#taint-nodes" title="Direct link to heading">​</a></h3><p>The Cloud Provider is going to be installed on the Server (Master) Nodes. To ensure this happens correctly, we need to ensure the nodes are tainted correctly.</p><div class="theme-admonition theme-admonition-caution alert alert--warning admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</div><div class="admonitionContent_S0QG"><p>Not sure if this is a K3S quirk or just my luck, but additionally I had to reapply the Master and Worker roles to the Nodes for the DaemonSet to recognize the Role.</p></div></div><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">## TAINT SERVER (MASTER) NODES</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl taint nodes --selector</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'node-role.kubernetes.io/master'</span><span class="token plain"> node-role.kubernetes.io/master</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">:NoSchedule</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## ADD ROLES TO SERVER (MASTER) NODES</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl label nodes --selector</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'node-role.kubernetes.io/master'</span><span class="token plain"> node-role.kubernetes.io/master</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> --overwrite</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## TAINT AGENT (WORKER) NODES</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl taint nodes --selector</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'!node-role.kubernetes.io/master'</span><span class="token plain"> node.cloudprovider.kubernetes.io/uninitialized</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">true:NoSchedule</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## ADD ROLES TO AGENT (WORKER) NODES</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl label nodes --selector</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'node-role.kubernetes.io/worker'</span><span class="token plain"> node-role.kubernetes.io/worker</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> --overwrite</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Once you have applied the Taints, you can verify they applied successfully by running this command;</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">## VALIDATE TAINTS</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl describe nodes </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">egrep</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Taints:|Name:"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If the taints applied successfully you should see all the Server (Master) Nodes with the Taint <code>node-role.kubernetes.io/master:NoSchedule</code> and all Agent (Worker) Nodes have the Taint <code>node.cloudprovider.kubernetes.io/uninitialized=true:NoSchedule</code></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="configure-virtual-machine-settings">Configure Virtual Machine Settings<a class="hash-link" href="#configure-virtual-machine-settings" title="Direct link to heading">​</a></h3><p>Another configuration item that needs to occur, is ensuring that each virtual machine’s hard disk (vmdk) is assigned a unique identifier (UUID). The easiest way to interact with the virtual machine settings is to use a command line utility called <code>govc</code>.</p><blockquote><p>govc is vSphere CLI provided by VMware and is built on top of govmoi. The CLI is designed to be a user friendly CLI alternative to the GUI and well suited for automation tasks. It also acts as a test harness for the govmomi APIs and provides working examples of how to use the APIs.</p><p>– <a href="https://github.com/vmware/govmomi/tree/master/govc" target="_blank" rel="noopener noreferrer"><em>Govc Github</em></a></p></blockquote><p>To install the CLI on Mac, you can use Homebrew. To install govc run <code>brew install govc</code>. For other operating systems, please refer to the <a href="https://github.com/vmware/govmomi/tree/master/govc" target="_blank" rel="noopener noreferrer">documentation</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="govc-setup">GOVC Setup<a class="hash-link" href="#govc-setup" title="Direct link to heading">​</a></h3><p>Before we can use the utility we have to specify how <code>govc</code> connects to vSphere. In Mac and Linux, this is accomplished by setting environment variables.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">## CONFIGURE GOVC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">GOVC_URL</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'{{ URL-FOR-VCSA }}'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">GOVC_USERNAME</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'administrator@vsphere.local'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">GOVC_PASSWORD</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'{{ PASSWORD-FOR-ABOVE-ACCOUNT }}'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">GOVC_INSECURE</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><table><thead><tr><th><strong>Variable</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td>GOVC_URL</td><td>the URL for your vSphere (VCSA) instance</td></tr><tr><td>GOVC_USERNAME</td><td>the login account for vSphere</td></tr><tr><td>GOVC_PASSWORD</td><td>the password for the account specified</td></tr><tr><td>GOVC_INSECURE</td><td>used when self-signed certificates are in use on VCSA, suppresses certificate warnings</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="enable-diskuuid">Enable DiskUUID<a class="hash-link" href="#enable-diskuuid" title="Direct link to heading">​</a></h3><p>At this point you should be able to utilize <code>govc</code> to query vSphere. The first command you can run is <code>govc ls</code>. This will list the any DataCenters you have configured and folders. You will need to enable DiskUUID on all the virtual machines in the cluster and to do this you will need to know the path to the virtual machine.</p><p>To find the path use the <code>govc ls</code> command followed by a path. Start with leaving it blank and keep drilling down until you find the paths to your virtual machines. For the example below, my final govc command looked like; <code>govc ls /Homelab/vm/Applications/Demo/</code></p><p>Enable DiskUUID on the virtual machines by running the following command. Outline below is how I applied it in my stack.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">## ADD DISK UUID FLAG</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">govc vm.change -e</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"disk.enableUUID=1"</span><span class="token plain"> -vm</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'{{ PATH-TO-VM }}'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## EXAMPLE -- ADD DISK UUID </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">govc vm.change -e</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"disk.enableUUID=1"</span><span class="token plain"> -vm</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'/Homelab/vm/Applications/Demo/MASTER-001'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">govc vm.change -e</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"disk.enableUUID=1"</span><span class="token plain"> -vm</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'/Homelab/vm/Applications/Demo/MASTER-002'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">govc vm.change -e</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"disk.enableUUID=1"</span><span class="token plain"> -vm</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'/Homelab/vm/Applications/Demo/MASTER-003'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">govc vm.change -e</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"disk.enableUUID=1"</span><span class="token plain"> -vm</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'/Homelab/vm/Applications/Demo/WORKER-001'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">govc vm.change -e</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"disk.enableUUID=1"</span><span class="token plain"> -vm</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'/Homelab/vm/Applications/Demo/WORKER-002'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">govc vm.change -e</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"disk.enableUUID=1"</span><span class="token plain"> -vm</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'/Homelab/vm/Applications/Demo/WORKER-003'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="adding-providerid">Adding ProviderID<a class="hash-link" href="#adding-providerid" title="Direct link to heading">​</a></h3><p>The final configuration change needed is to add a “ProviderID” to each of the nodes. Reading though the documentation, this ID needs to be unique but can be set to anything (within reason). Borrowing from the documentation, the easiest thing to do is to assign the virtual machine UUID as the ProviderID as these are always unique.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">## ADD PROVIDERID TO EACH NODE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token for-or-select variable" style="color:#36acaa">vm</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable" style="color:#36acaa">govc </span><span class="token variable function" style="color:#d73a49">ls</span><span class="token variable" style="color:#36acaa"> /Homelab/vm/Applications/Demo/</span><span class="token variable" style="color:#36acaa">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">do</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">MACHINE_INFO</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable" style="color:#36acaa">govc vm.info -json -dc</span><span class="token variable operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">Homelab -vm.ipath</span><span class="token variable operator" style="color:#393A34">=</span><span class="token variable string" style="color:#e3116c">"</span><span class="token variable string variable" style="color:#36acaa">$vm</span><span class="token variable string" style="color:#e3116c">"</span><span class="token variable" style="color:#36acaa"> -e</span><span class="token variable operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">true</span><span class="token variable" style="color:#36acaa">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">VM_NAME</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable" style="color:#36acaa">jq -r </span><span class="token variable string" style="color:#e3116c">' .VirtualMachines[] | .Name'</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable operator" style="color:#393A34">&lt;&lt;&lt;</span><span class="token variable" style="color:#36acaa"> $MACHINE_INFO </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable function" style="color:#d73a49">awk</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable string" style="color:#e3116c">'{print tolower($0)}'</span><span class="token variable" style="color:#36acaa">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">VM_UUID</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable" style="color:#36acaa"> jq -r </span><span class="token variable string" style="color:#e3116c">' .VirtualMachines[] | .Config.Uuid'</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable operator" style="color:#393A34">&lt;&lt;&lt;</span><span class="token variable" style="color:#36acaa"> $MACHINE_INFO </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable function" style="color:#d73a49">awk</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable string" style="color:#e3116c">'{print toupper($0)}'</span><span class="token variable" style="color:#36acaa">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl patch </span><span class="token function" style="color:#d73a49">node</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$VM_NAME</span><span class="token plain">.dodbrit.lab -p </span><span class="token string" style="color:#e3116c">"{</span><span class="token string entity" style="color:#36acaa">\"</span><span class="token string" style="color:#e3116c">spec</span><span class="token string entity" style="color:#36acaa">\"</span><span class="token string" style="color:#e3116c">:{</span><span class="token string entity" style="color:#36acaa">\"</span><span class="token string" style="color:#e3116c">providerID</span><span class="token string entity" style="color:#36acaa">\"</span><span class="token string" style="color:#e3116c">:</span><span class="token string entity" style="color:#36acaa">\"</span><span class="token string" style="color:#e3116c">vsphere://</span><span class="token string variable" style="color:#36acaa">$VM_UUID</span><span class="token string entity" style="color:#36acaa">\"</span><span class="token string" style="color:#e3116c">}}"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">done</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>For good measure, you can validate that the ProviderIDs were added correctly by running <code>kubectl describe nodes | egrep "ProviderID:|Name:"</code>. The expected outcome should be all of the nodes listed, with a ProviderID that starts with “vsphere”. Additionally, the IDs should all be unique.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-2-install-vsphere-cpi">Step 2: Install vSphere CPI<a class="hash-link" href="#step-2-install-vsphere-cpi" title="Direct link to heading">​</a></h2><p>Now that we have our cluster up and running, and the nodes configured with additional information, we can finally install the vSphere Cloud Provider.</p><p>The first step is generate the required configuration file (<code>vsphere.conf</code>) and credentials (<code>cpi-secret.yaml</code>).</p><div class="language-conf codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">vsphere.conf</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-conf codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># vsphere.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Global properties in this section will be used for all specified vCenters unless overriden in VirtualCenter section.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">global:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  # default https port</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  port: 443</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  # set insecureFlag to true if the vCenter uses a self-signed cert</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  insecureFlag: true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  # settings for using k8s secret</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  secretName: cpi-global-secret</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  secretNamespace: kube-system</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># vcenter section</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vcenter:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  # arbitrary name for cluster</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  demo:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    # ip or fqdn of vcsa</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    server: 10.0.15.5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    # vSphere Datacenter Name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    datacenters:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - Homelab</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    # secret with credentials</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    secretName: cpi-secret</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    secretNamespace: kube-system</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">cpi-secret.yaml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># cpi-secret.yaml</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Secret</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> cpi</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">secret</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> kube</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">system</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">stringData</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">10.0.15.5.username</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"administrator@vsphere.local"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">10.0.15.5.password</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"{{ PASSWORD-TO-ACCOUNT }}"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>To apply the vSphere configuration to the cluster, we will create a ConfigMap of the file. To do that you run the following command;</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl create configmap cloud-config --from-file</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">vsphere.conf --namespace</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">kube-system</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This will create a ConfigMap in the <code>kube-system</code> namespace with all the items we defined. To add the login credentials, we just need to apply the Secret as that was defined as a Secret to begin with.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl create -f cpi-secret.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Again for peace of mind, we can validate these applied;</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">## ENSURE CONFIGMAP WAS CREATED</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get configmap cloud-config --namespace</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">kube-system</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## ENSURE SECRET WAS CREATED</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get secret cpi-secret --namespace</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">kube-system</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>After you have verified that the ConfigMap and Secret was created, you can delete both of these files. These files have potentially sensitive information in them and its good practice to remove them.</p><p>Now we can deploy all the components of the vSphere Cloud Provider. We are going to apply them directly from the vSphere GitHub repository.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_S0QG"><p>It is recommend that you review the files first and once you feel confident that the files are safe, you can then apply them</p></div></div><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">## CREATE ROLES</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl apply -f https://raw.githubusercontent.com/kubernetes/cloud-provider-vsphere/master/manifests/controller-manager/cloud-controller-manager-roles.yaml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## CREATE ROLE BINDINGS</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl apply -f https://raw.githubusercontent.com/kubernetes/cloud-provider-vsphere/master/manifests/controller-manager/cloud-controller-manager-role-bindings.yaml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## CREATE DAMEONSET</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl apply -f https://github.com/kubernetes/cloud-provider-vsphere/raw/master/manifests/controller-manager/vsphere-cloud-controller-manager-ds.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>And we can check that the Cloud Provider deployed successfully. You should see a <strong>vsphere-cloud-controller-manager</strong> running on each of your master nodes.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get pods --all-namespaces</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Congratulations! We have just install the vSphere Cloud Provider within our cluster!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-3-install-vsphere-csi">Step 3: Install vSphere CSI<a class="hash-link" href="#step-3-install-vsphere-csi" title="Direct link to heading">​</a></h2><p>Now that the Cloud Provider has been installed, we can turn the attention to the Cloud Storage Interface (CSI). Just like the Cloud Provider, we need to create some configuration files. Modify the file outlined below and save it as <code>csi-vsphere.conf</code>.</p><div class="language-conf codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">csi-vsphere.conf</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-conf codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[Global]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cluster-id = "k3s-cluster"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">user = "administrator@vsphere.local"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">password = "{{ PASSWORD-FOR-ACCOUNT }}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">port = "443"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">insecure-flag = "1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[VirtualCenter "{{ VCSA-IP-ADDRESS }}"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">datacenters = "Homelab"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[Workspace]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">server = "{{ VCSA-IP-ADDRESS }}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">datacenter = "Homelab"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">default-datastore = "{{ DEFAULT-VSPHERE-DATASTORE }}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">resourcepool-path = "{{ DATACENTER-NAME }}/Resources"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">folder = "kubernetes"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[Disk]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scsicontrollertype = pvscsi</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The default-datastore field in the configuration file is important enough that it is included in the file, but will not be used once we configure the Storage Class. The Storage Class grants us the ability to define where the persistent storage will be save. Additionally, multiple Storage Class‘s can be defined that will allow for more granular storage based upon the deployment.</p><p>Unlike CPI, we are going to upload this configuration to Kubernetes via a Secret.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl create secret generic vsphere-config-secret --from-file</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">csi-vsphere.conf --namespace</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">kube-system</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>When then validate that the Secret created successfully …</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get secret vsphere-config-secret --namespace</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">kube-system</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_S0QG"><p>At this point, you made delete csi-vsphere.conf as it contains sensitive information.</p></div></div><p>Now we can deploy all the components of the vSphere Storage Provider. We are going to apply them directly from the vSphere GitHub repository.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">## DEFINE CLUSTER ROLES</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/vsphere-csi-driver/v2.2.0/manifests/v2.2.0/rbac/vsphere-csi-controller-rbac.yaml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## DEFINE ROLE BINDINGS</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/vsphere-csi-driver/v2.2.0/manifests/v2.2.0/rbac/vsphere-csi-node-rbac.yaml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## DEPLOY STORAGE DRIVERS (CONTROLLER)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/vsphere-csi-driver/v2.2.0/manifests/v2.2.0/deploy/vsphere-csi-controller-deployment.yaml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## DEPLOY STORAGE DRIVERS (DAMEONSET)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/vsphere-csi-driver/v2.2.0/manifests/v2.2.0/deploy/vsphere-csi-node-ds.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We can then validate the installation by checking the Pod deployment. It may take a few minutes for all of the pods to get created and start running.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get pods --namespace</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">kube-system</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a class="hash-link" href="#summary" title="Direct link to heading">​</a></h2><p>At this point, and ensuring that everything went smoothly, you should have a Kubernetes cluster running with both vSphere CPI and CSI running and configured. In Part IV of this blog, we are going to define the storage class within the cluster and deploy a demo application.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="references">References<a class="hash-link" href="#references" title="Direct link to heading">​</a></h2><ul><li><a href="https://longhorn.io/" target="_blank" rel="noopener noreferrer">Rancher Labs Longhorn</a></li><li><a href="https://cloud-provider-vsphere.sigs.k8s.io/" target="_blank" rel="noopener noreferrer">vSphere Cloud Provider</a></li><li><a href="https://vsphere-csi-driver.sigs.k8s.io/" target="_blank" rel="noopener noreferrer">vSphere Storage Provider</a></li><li><a href="https://rancher.com/docs/k3s/latest/en/" target="_blank" rel="noopener noreferrer">Rancher Labs K3S</a></li><li><a href="https://kubernetes.io/docs/concepts/architecture/cloud-controller/" target="_blank" rel="noopener noreferrer">Kuberenetes Cloud Controllers</a></li><li><a href="https://vmware.github.io/photon/docs/" target="_blank" rel="noopener noreferrer">VMware Photon OS</a></li><li><a href="http://nginx.org/en/docs/http/load_balancing.html" target="_blank" rel="noopener noreferrer">NGINX Load Balancer</a></li><li><a href="https://github.com/vmware/govmomi/tree/master/govc" target="_blank" rel="noopener noreferrer">Govc Documentation</a></li></ul>]]></content:encoded>
            <category>Rancher</category>
            <category>Kubernetes</category>
            <category>Storage</category>
            <category>K3S</category>
            <category>VMWare</category>
        </item>
        <item>
            <title><![CDATA[K3S Cluster with vSphere Storage (Part IV)]]></title>
            <link>https://blog.dodbrit.dev/2021-07-03/k3s-cluster-with-vsphere-storage-part-iv</link>
            <guid>2021-07-03/k3s-cluster-with-vsphere-storage-part-iv</guid>
            <pubDate>Fri, 30 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[K3S Cluster with vSphere Storage Hero]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt=" K3S Cluster with vSphere Storage Hero" src="/assets/images/k3s_vsphere_part4-9c736185f2b2ffb46091a6f0982203d8.png" width="1400" height="933" class="img_ev3q"></p><p>Having followed along with the previous 3 blog posts, you should have a cluster that is one small step away from demonstrating the storage capabilities. In this final part of the series, we will perform our final configurations and demonstrate the simplicity of our storage solution.</p><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_S0QG"><p>At the end of this post, your cluster isn’t quite ready for a workload as it is still missing an Ingress Controller. While deploying an Ingress Controller is outside the scope of this post, I will briefly describe how to deploy NGINX as an IngressController at the end of this post to get you started. I plan on making a post about this later to get into more detail.</p></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-1-define-storage-policy-in-vsphere">Step 1: Define Storage Policy in vSphere<a class="hash-link" href="#step-1-define-storage-policy-in-vsphere" title="Direct link to heading">​</a></h2><p>In order for our StorageClass to know where to store our persistent data, we are going to create a simple Storage Policy in vSphere. For the purposes of this demo, we are going to create a simple <strong>tag based</strong> policy. Feel free to make additional tags if your situation requires it. The names can be changed to suit your needs, but remember what you called them as you will need them later.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="vsphere-category">vSphere Category<a class="hash-link" href="#vsphere-category" title="Direct link to heading">​</a></h3><ol><li>Login to your vSphere instance.</li><li>Click the Menu navigation dropdown and select Tags &amp; Custom Attributes.</li><li>Click Categories and Select New.</li><li>Give the Category the name Kubernetes Storage, select One Tag, and deselect all but Datastore.</li><li>Click Create.</li></ol><p><img loading="lazy" alt="Category Screenshot" src="/assets/images/category-d340aef4478d694848129e5da15f8995.png" width="873" height="633" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="vsphere-tags">vSphere Tags<a class="hash-link" href="#vsphere-tags" title="Direct link to heading">​</a></h3><ol><li>Navigate back to Tags.</li><li>Click New and create a new tag with the Demo, using Kubernetes Storage as the Category.</li><li>Click Create.</li></ol><p><img loading="lazy" alt="Tags Screenshot" src="/assets/images/tags-f68646313f3488327ba3e0b61e42b1e6.png" width="584" height="406" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="tag-vsphere-datastore">Tag vSphere Datastore<a class="hash-link" href="#tag-vsphere-datastore" title="Direct link to heading">​</a></h3><p>Now we need to apply our newly created tag to our Datastore. This task is as simple as navigating to the Datastore tab, clicking Summary section, and selecting Assign in the Tags card. Select the newly created Demo tag and click Assign on last time to close the dialog box.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="vsphere-storage-policy">vSphere Storage Policy<a class="hash-link" href="#vsphere-storage-policy" title="Direct link to heading">​</a></h3><p>Now that we have created our tags, and assigned them to our Datastore, we can create our simple but effective Storage Policy. Feel free to customize this later to suit your needs.</p><ol><li>Click the Menu navigation dropdown and select Policy and Profiles.</li><li>On VM Storage Policies click Create to create a new Storage Policy.</li><li>Name the policy Demo and click Next (remember this name as it is needed in the StorageClass step).</li><li>For the Policy structure, select Enable tag based placement rules.</li><li>Click Next.</li><li>In this dialog, select the Category you created in the previous step and leave Usage Option with the defaulted Use storage tagged with.</li><li>Click Browse and select the appropriate Tag. Click Next.</li><li>Confirm that your tag rule worked by verifying the DataStore populated in this table. If they are correct click Next and then Finish.</li></ol><p><img loading="lazy" alt="Storage Screenshot" src="/assets/images/storage-6b93d53a9f495872ef8545c64d57f283.png" width="1023" height="761" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-2-define-storage-class">Step 2: Define Storage Class<a class="hash-link" href="#step-2-define-storage-class" title="Direct link to heading">​</a></h2><p>The StorageClass defines how Kubernetes handles requests for persistent storage. By defining the StorageClass it allows application deployed to the cluster the ability to request storage dynamically. While this may seem a little scary at first, it’s not the wild west. Limits can still be placed on a per application or per user basis.</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">vmware-sc.yml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">#vmware-sc.yml</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> StorageClass</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> storage.k8s.io/v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> vsphere</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">annotations</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">#storageclass.kubernetes.io/is-default-class: "true"  # Optional</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">provisioner</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> csi.vsphere.vmware.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#allowVolumeExpansion: true  # Optional: only applicable to vSphere 7.0U1 and above</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">parameters</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">storagepolicyname</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Demo"</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#Optional Parameter</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In the above file;</p><table><thead><tr><th><strong>Attribute</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td>metadata/name	Defines the name of the StorageClass.</td><td>This is the name used by your application deployments when requesting storage</td></tr><tr><td>metadata/annotations/storageclass.kubernetes.io/is-default-class</td><td>This is set to true if you wish this Storage Class to be set as the default for the cluster</td></tr><tr><td>provisioner</td><td>This tells Kubernetes to use the CSI driver we deployed in the previous blog</td></tr><tr><td>allowVolumeExpansion</td><td>This is in beta. For more information read the <a href="https://vsphere-csi-driver.sigs.k8s.io/features/volume_expansion.html" target="_blank" rel="noopener noreferrer">documentation</a></td></tr><tr><td>parameters/storagepolicyname</td><td>This is wait instructs the CSI to use the Storage Policy to find the correct Datastore</td></tr></tbody></table><p>We can now apply our StorageClass to the cluster and we can validated that it applied successfully;</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">## APPLY STORAGE CLASS</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl apply -f vmware-sc.yml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## VALIDATE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get sc</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This command should return two items; <strong>local-path</strong> and <strong>vsphere</strong>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="demo-usage-of-vsphere-storage">Demo: Usage of vSphere Storage<a class="hash-link" href="#demo-usage-of-vsphere-storage" title="Direct link to heading">​</a></h3><p>Without going into a deep dive in the realm of storage, the different types, Block vs. File, I’m going to demonstrate how to use Block Storage on vSphere. For the vast majority of Kubernetes workloads Block Storage will work great.</p><p>If you have a workload that requires File Storage, review the documentation here to view the additional items that are required in vSphere to make that work.</p><p>As previously mentioned, one of the benefits of using a StorageClass is the ability to dynamically provision persistent volumes.</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">example-storage.yml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">## example-storage.yml</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> PersistentVolumeClaim</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> vsphere</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">demo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">labels</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> mongoDB</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">environment</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> test</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">accessModes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ReadWriteOnce</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">resources</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">requests</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">storage</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 5Gi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">storageClassName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> vsphere</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Using the example-storage.yml file defined above, running <code>kubectl apply -f example-storage.yml</code> will result in a PersistentVolumeClaim being created and a matching VMDK within vSphere.</p><p>To view your Persistent Volume Claims, simply run <code>kubectl get pvc</code>. You may need to add <code>-n {{ NAMESPACE_NAME }}</code> if you are deploying your volume in a namespace other than default.</p><p>Additionally, you can view your Persistent storage from within vSphere. If you navigate to Storage -&gt; Name of DataStore -&gt; Monitor. You can then select Cloud Native Storage -&gt; Container Volumes. This will list of all the volumes being used on that Datastore.</p><p>You can add, or remove, labels in the Metadata section of the example-storage.yml file. These tags will appear within the vSphere UI and allow for easier filtering and deciphering of what application is using what volume.</p><p>The final thing to mention is, while this only an example Volume Claim, when deploying a production application, the same principles apply. Your application should have a PersistentVolumeClaim , if not multiple, and the only updates you should have to do is add the StorageClassName and possibly tags (if they aren’t already there).</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a class="hash-link" href="#summary" title="Direct link to heading">​</a></h2><p>While there were quite a few steps to get your cluster configured for use with your vSphere Infrastructure, at the end of the day, the struggle should be worth it. By utilizing your vSphere infrastructure, you can leverage the same backup and restore procedures to backup your persistent data.</p><p>Thank you for taking the time to read my blog and bearing with me while I figure out this whole blogging thing. Please feel free to submit any comments below on ways to improve.</p><p>Cheers,</p><p>Peter</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="references">References<a class="hash-link" href="#references" title="Direct link to heading">​</a></h2><ul><li><a href="https://longhorn.io/" target="_blank" rel="noopener noreferrer">Rancher Labs Longhorn</a></li><li><a href="https://cloud-provider-vsphere.sigs.k8s.io/" target="_blank" rel="noopener noreferrer">vSphere Cloud Provider</a></li><li><a href="https://vsphere-csi-driver.sigs.k8s.io/" target="_blank" rel="noopener noreferrer">vSphere Storage Provider</a></li><li><a href="https://rancher.com/docs/k3s/latest/en/" target="_blank" rel="noopener noreferrer">Rancher Labs K3S</a></li><li><a href="https://kubernetes.io/docs/concepts/architecture/cloud-controller/" target="_blank" rel="noopener noreferrer">Kuberenetes Cloud Controllers</a></li><li><a href="https://vmware.github.io/photon/docs/" target="_blank" rel="noopener noreferrer">VMware Photon OS</a></li><li><a href="http://nginx.org/en/docs/http/load_balancing.html" target="_blank" rel="noopener noreferrer">NGINX Load Balancer</a></li><li><a href="https://github.com/vmware/govmomi/tree/master/govc" target="_blank" rel="noopener noreferrer">Govc Documentation</a></li></ul>]]></content:encoded>
            <category>Rancher</category>
            <category>Kubernetes</category>
            <category>Storage</category>
            <category>K3S</category>
            <category>VMWare</category>
        </item>
        <item>
            <title><![CDATA[Rancher Academy]]></title>
            <link>https://blog.dodbrit.dev/2021-04-16/rancher-academy</link>
            <guid>2021-04-16/rancher-academy</guid>
            <pubDate>Fri, 16 Apr 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Rancher Academy]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="Rancher Academy" src="/assets/images/RancherAcademy-f186a6be58414a5150795471c5eb891f.png" width="512" height="321" class="img_ev3q"></p><p>Good afternoon and happy Friday! Thanks to the wonderful <a href="https://youtu.be/gwUz3E9AW0w" target="_blank" rel="noopener noreferrer">Network Chuck</a>, today is day one of this website. As a beginning post I thought I would start with a free DevOps certification.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_S0QG"><p>As a quick update, I have successfully passed the Rancher Operator: Level One!</p><p>As I previously mentioned, despite the fact that this is a Rancher certificate that is obviously geared towards the Rancher product, I highly recommend this certification for anyone that is new to the <em>Kubernetes</em> world or needs a refresher for the matter.</p><p>Rancher Operator: Level One touches upon many of the core concepts of <em>Kubernetes</em> and is a great place to start.</p></div></div><p>Rancher is one of the leading companies when it comes to all things DevOps (they haven’t paid me to say that). As a commitment to the community, late last year <em>Rancher</em> released a no cost certification for their Rancher platform. While the certification is about Rancher’s cluster management tool, the certification is a great entry into the world of <em>Kubernetes</em>. </p><p><a href="https://academy.rancher.com/" target="_blank" rel="noopener noreferrer">https://academy.rancher.com/</a></p><p>Hopefully before my next post, I will be Rancher Operator certified! </p><p>Have a great weekend everyone!</p><p>Cheers,</p><p>Peter</p>]]></content:encoded>
            <category>Certifications</category>
            <category>Rancher</category>
            <category>Kubernetes</category>
        </item>
    </channel>
</rss>