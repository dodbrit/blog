<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>VMWare on DODBRIT</title><link>https://dodbrit.io/tags/vmware/</link><description>Recent content in VMWare on DODBRIT</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 03 Jul 2021 03:00:00 +0000</lastBuildDate><atom:link href="https://dodbrit.io/tags/vmware/index.xml" rel="self" type="application/rss+xml"/><item><title>K3s Cluster With Vsphere Storage [Part IV]</title><link>https://dodbrit.io/posts/2021-07-03/k3s-cluster-with-vsphere-storage-part-iv/</link><pubDate>Sat, 03 Jul 2021 03:00:00 +0000</pubDate><guid>https://dodbrit.io/posts/2021-07-03/k3s-cluster-with-vsphere-storage-part-iv/</guid><description>Having followed along with the previous three blog posts, you should have a cluster that is one small step away from demonstrating the storage capabilities. In this final part of the series, we will perform our final configurations and demonstrate the simplicity of our storage solution.
Note
At the end of this post, your cluster isn’t quite ready for a workload as it is still missing an Ingress Controller. While deploying an Ingress Controller is outside the scope of this post, I will briefly describe how to deploy NGINX as an IngressController at the end of this post to get you started.</description></item><item><title>K3s Cluster With Vsphere Storage [Part III]</title><link>https://dodbrit.io/posts/2021-07-03/k3s-cluster-with-vsphere-storage-part-iii/</link><pubDate>Sat, 03 Jul 2021 02:00:00 +0000</pubDate><guid>https://dodbrit.io/posts/2021-07-03/k3s-cluster-with-vsphere-storage-part-iii/</guid><description>Having followed the steps in Part II, you should have a K3S Cluster stood up. In this Part we are going to add the all important Cloud Provider.
Step 1: Prepare Nodes for vSphere Cloud Provider Before we can install the vSphere Cloud provider, there are couple configurations that need to be applied. You can read more about these requirements by heading over to the VMWare documentation.
Taint Nodes The Cloud Provider is going to be installed on the Server (Master) Nodes.</description></item><item><title>K3s Cluster With Vsphere Storage [Part II]</title><link>https://dodbrit.io/posts/2021-07-03/k3s-cluster-with-vsphere-storage-part-ii/</link><pubDate>Sat, 03 Jul 2021 01:00:00 +0000</pubDate><guid>https://dodbrit.io/posts/2021-07-03/k3s-cluster-with-vsphere-storage-part-ii/</guid><description>Continuing on the discussion from Part I, in this part we are going to deploy a K3S cluster on a vSphere environment.
Step 1: The Setup Note
I’m currently in the process of creating Terraform scripts to accomplish this deployment, but feel free to deploy you cluster per your favorite method. I will create a blog post describing my Terraform scripts and the headache that PhotonOS caused once I’ve completed the Terraform Script.</description></item><item><title>K3s Cluster With Vsphere Storage [Part I]</title><link>https://dodbrit.io/posts/2021-07-03/k3s-cluster-with-vsphere-storage-part-i/</link><pubDate>Sat, 03 Jul 2021 00:00:00 +0000</pubDate><guid>https://dodbrit.io/posts/2021-07-03/k3s-cluster-with-vsphere-storage-part-i/</guid><description>Whether you work in an environment that utilizes VMware products, you have a VMware Homelab or you just want to learn something different for Kubernetes Storage this post is for you.
When deploying a highly available Kubernetes cluster, distributed storage becomes a thorn in your side. Just like every other Cloud Native tool, there are a number of solutions out there; Rancher Lab’s Longhorn and GlusterFS just to name two. However, did you know, starting with vSphere 6.</description></item></channel></rss>